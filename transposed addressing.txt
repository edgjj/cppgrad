1 2
3 4
5 6
7 8

1 2 3 4 5 6 7 8

1 3 5 7
2 4 6 8

mat[row][col] = chunk[row * col_shape + col]
t_mat[row][col] = chunk[col * row_shape + row]

let row_shape = shape[0], col_shape = shape[1]

mat[i][j] = chunk[i * shape[1] + j]
mat.T[i][j] = chunk[j * shape[0] + i]

mat[i][j][k][l] = chunk[i * shape[3] + j * shape[2] + k * shape[1] + l]
mat.T[i][j][k][l] = chunk[l * shape[0] + k * shape[1] + j * shape[2] + i] 

OR

we can just reverse the shape of tensor, perform reverse order indexing, and do indexing as following:

mat[i][j][k][l] = chunk[i * shape[3] + j * shape[2] + k * shape[1] + l]
new_shape = (shape[3], shape[2], shape[1], shape[0])

mat.T[i][j][k][l] = chunk[l * new_shape[3] + k * new_shape[2] + j * new_shape[1] + i] 


bullshit ..